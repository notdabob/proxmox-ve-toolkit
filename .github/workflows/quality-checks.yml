name: Quality Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  quality-checks:
    name: Code Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install PowerShell (Linux)
        run: |
          # Update package list
          sudo apt-get update

          # Install prerequisites
          sudo apt-get install -y wget apt-transport-https software-properties-common

          # Download Microsoft signing key and repository
          wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
          sudo dpkg -i packages-microsoft-prod.deb

          # Install PowerShell
          sudo apt-get update
          sudo apt-get install -y powershell

          # Verify installation
          pwsh -c '$PSVersionTable'

      - name: Setup Node.js for markdownlint
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Quality Tools Using Automated Modules
        run: |
          pwsh -Command "
            Write-Host 'üöÄ Installing quality tools using automated modules...' -ForegroundColor Cyan
            
            # Import and use our quality tools installation module
            Import-Module ./scripts/powershell/Install-QualityTool.psm1 -Force
            
            # Install all quality tools (no sudo required for markdownlint via npx)
            Install-AllQualityTool -Force
            
            Write-Host '‚úÖ All quality tools installed successfully' -ForegroundColor Green
          "

      - name: Verify Tool Installation
        run: |
          pwsh -Command "
            Write-Host 'üß™ Verifying tool installation...' -ForegroundColor Blue
            
            Import-Module ./scripts/powershell/Install-QualityTool.psm1 -Force
            
            # Test all tools are available
            if (Test-QualityToolsInstallation) {
              Write-Host '‚úÖ All quality tools verified successfully' -ForegroundColor Green
            } else {
              Write-Host '‚ùå Quality tools verification failed' -ForegroundColor Red
              exit 1
            }
            
            # Show installed versions
            Show-ToolVersion
          "

      - name: Run Comprehensive Quality Checks
        run: |
          pwsh -Command "
            Write-Host 'üîç Running comprehensive quality checks...' -ForegroundColor Cyan
            
            # Import quality checks module
            Import-Module ./scripts/powershell/Invoke-QualityChecks.psm1 -Force
            
            # Run all quality checks and exit on failure
            \$allPassed = Invoke-AllQualityCheck -Path '.' -ExitOnFailure
            
            if (\$allPassed) {
              Write-Host ''
              Write-Host 'üéâ All quality checks passed!' -ForegroundColor Green
            } else {
              Write-Host ''
              Write-Host '‚ùå Quality checks failed' -ForegroundColor Red
              exit 1
            }
          "

      - name: Quality Check Summary
        if: always()
        run: |
          echo ""
          echo "üìä Automated Quality Check Summary"
          echo "=================================="
          echo "This workflow uses the project's automated quality check modules:"
          echo "- PowerShell: PSScriptAnalyzer via Install-QualityTool.psm1"
          echo "- Shell Scripts: shellcheck via system package manager"
          echo "- YAML Files: yq validation via automated installation"
          echo "- Markdown Files: markdownlint via npx (no sudo required)"
          echo ""
          echo "All tools are installed and executed via cross-platform PowerShell modules."
